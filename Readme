Приставлен Bash script
Описание по этапная установка 
Шаг 1: Установка Node.js и npm

    Проверка наличия Node.js: Скрипт проверяет, установлен ли Node.js. Если нет, то он устанавливает Node.js и npm.
        Обновляет список пакетов.
        Устанавливает утилиту curl.
        Загружает и запускает установочный скрипт для Node.js.
        Устанавливает Node.js и npm.

    Установка конкретной версии npm: Устанавливает npm версии 10.8.2, если он еще не установлен.

Шаг 2: Установка NestJS CLI

    Проверка наличия NestJS CLI: Проверяет, установлен ли NestJS CLI. Если нет, то устанавливает его глобально через npm.

Шаг 3: Создание нового проекта

    Создание проекта NestJS: Создает новый проект NestJS под названием trello-clone, пропуская создание репозитория Git и используя npm в качестве менеджера пакетов.

    Переход в директорию проекта: Переходит в директорию созданного проекта.

Шаг 4: Установка зависимостей проекта

    Установка пакетов: Устанавливает необходимые зависимости для проекта, включая библиотеки для аутентификации, работы с базой данных, валидации и документирования API.

Шаг 5: Создание файлов и директорий

    Создание директорий: Создает директории для различных частей приложения, таких как аутентификация, пользователи, колонки, карточки и комментарии.

    Создание файлов с кодом: Создает необходимые файлы для каждого модуля, таких как модули, сервисы и контроллеры.
        auth.module.ts: Модуль аутентификации, который подключает JWT и сервисы пользователей.
        auth.service.ts: Сервис аутентификации для проверки пользователей и создания JWT токенов.
        auth.controller.ts: Контроллер для обработки запросов на вход в систему.
        jwt.strategy.ts: Стратегия для проверки JWT токенов.
        users.module.ts: Модуль пользователей для управления пользователями.
        user.entity.ts: Сущность пользователя для работы с базой данных.
        users.service.ts: Сервис пользователей для выполнения операций с пользователями.
        users.controller.ts: Контроллер пользователей для обработки запросов.
        create-user.dto.ts: DTO для создания пользователей.
        column.entity.ts: Сущность колонки для работы с базой данных.
        card.entity.ts: Сущность карточки для работы с базой данных.
        comment.entity.ts: Сущность комментария для работы с базой данных.

Шаг 6: Конфигурация базы данных

    Настройка подключения к базе данных: В app.module.ts настраивается подключение к базе данных MySQL, используя IP-адрес 45.159.208.109, и перечисляются сущности, которые будут использоваться.

Шаг 7: Запуск сервера

    Запуск приложения: Запускает сервер NestJS с помощью команды npm run start
